<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.felix.middleware.model.mapper.UserAccountMapper">
  <resultMap id="BaseResultMap" type="com.felix.middleware.model.entity.UserAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="is_active" jdbcType="TINYINT" property="isActive" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, amount, version, is_active
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.felix.middleware.model.entity.UserAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account (user_id, amount, version,
      is_active)
    values (#{userId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER},
      #{isActive,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.felix.middleware.model.entity.UserAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.felix.middleware.model.entity.UserAccount">
    update user_account
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.felix.middleware.model.entity.UserAccount">
    update user_account
    set user_id = #{userId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      version = #{version,jdbcType=INTEGER},
      is_active = #{isActive,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" resultType="com.felix.middleware.model.entity.UserAccount">
    SELECT <include refid="Base_Column_List"/>
    FROM user_account
    WHERE is_active=1 AND user_id=#{userId}
  </select>

  <update id="updateAmount">
    UPDATE user_account SET amount = amount - #{amount}
    WHERE is_active=1 AND id=#{id}
  </update>

  <update id="updateByPKVersion">
    update user_account set amount = amount - #{amount},version=version+1
    where id = #{id} and version=#{version} and amount >0 and (amount - #{amount})>=0
  </update>

  <select id="selectByUserIdLock" resultType="com.felix.middleware.model.entity.UserAccount">
    SELECT <include refid="Base_Column_List"/>
    FROM user_account
    WHERE is_active=1 AND user_id=#{userId} for update;
  </select>

  <update id="updateAmountLock">
    UPDATE user_account SET amount = amount - #{amount}
    WHERE is_active=1 AND id=#{id} and amount > 0 and (amount - #{amount}) >= 0
  </update>

</mapper>